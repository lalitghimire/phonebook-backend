{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","inputName","onChange","value","console","log","PersonForm","onSubmit","newName","handleNewPerson","newNumber","handleNewNumber","type","Persons","persons","filteredName","deletePerson","filter","person","name","toLowerCase","includes","map","filteredPerson","number","onClick","id","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","deleteOne","delete","update","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilteredNames","notification","setNotification","notificationType","setNotificationType","useEffect","initialList","event","target","preventDefault","length","window","confirm","toBeEditedPerson","find","editedPerson","returnedObject","setTimeout","catch","error","errorMessage","personObject","concat","deletePersonName","updatedList","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c45db00.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ inputName, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={inputName} onChange={onChange} />\n      {console.log(inputName)}\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  newName,\n  handleNewPerson,\n  newNumber,\n  handleNewNumber,\n}) => {\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <div>\n          name: <input value={newName} onChange={handleNewPerson} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, filteredName, deletePerson }) => {\n  return persons\n    .filter((person) =>\n      person.name.toLowerCase().includes(filteredName.toLowerCase())\n    )\n    .map((filteredPerson) => (\n      <p key={filteredPerson.name}>\n        {filteredPerson.name} {filteredPerson.number}{\" \"}\n        {\n          <button onClick={() => deletePerson(filteredPerson.id)}>\n            {\" \"}\n            Delete{\" \"}\n          </button>\n        }\n      </p>\n    ));\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteOne = (id, newObject) => {\n  const request = axios.delete(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst personService = { getAll, create, deleteOne, update };\nexport default personService;\n","const Notification = ({ message, className }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className={className}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    // variables with initial states\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filteredName, setFilteredNames] = useState('')\n    const [notification, setNotification] = useState(null)\n    const [notificationType, setNotificationType] = useState('')\n\n    //fetching persons from a json server(db.json)\n    useEffect(() => {\n        personService.getAll().then((initialList) => {\n            setPersons(initialList)\n        })\n    }, [])\n\n    // function to add a person to the persons\n    const addPerson = (event) => {\n        event.preventDefault()\n        if (persons.filter((person) => person.name === newName).length > 0) {\n            const confirmUpdate = window.confirm(\n                `${newName} is already added to phonebook ,replace the old number with a new one?`\n            )\n            if (confirmUpdate) {\n                const toBeEditedPerson = persons.find(\n                    (person) => person.name === newName\n                )\n                const editedPerson = { ...toBeEditedPerson, number: newNumber }\n\n                personService\n                    .update(toBeEditedPerson.id, editedPerson)\n                    .then((returnedObject) => {\n                        setPersons(\n                            persons.map((person) =>\n                                person.id !== toBeEditedPerson.id\n                                    ? person\n                                    : returnedObject\n                            )\n                        )\n\n                        setNotification(`${newName} has been edited`)\n                        setNotificationType('notify')\n                        setTimeout(() => {\n                            setNotification(null)\n                        }, 5000)\n                        setNewName('')\n                        setNewNumber('')\n                    })\n                    .catch((error) => {\n                        const errorMessage = error.response.data.error\n                        setNotificationType('warning')\n                        setNotification(`${errorMessage}`)\n                        setTimeout(() => {\n                            setNotification(null)\n                            setNotificationType('')\n                        }, 5000)\n                    })\n            }\n\n            return\n        }\n        const personObject = {\n            name: newName,\n            number: newNumber,\n        }\n        personService\n            .create(personObject)\n            .then((returnedObject) => {\n                setPersons(persons.concat(returnedObject))\n                setNotificationType('notify')\n                setNotification(`${newName} was added`)\n                setTimeout(() => {\n                    setNotification(null)\n                    setNotificationType('')\n                }, 5000)\n                setNewName('')\n                setNewNumber('')\n            })\n            .catch((error) => {\n                const errorMessage = error.response.data.error\n                setNotificationType('warning')\n                setNotification(`${errorMessage}`)\n                setTimeout(() => {\n                    setNotification(null)\n                    setNotificationType('')\n                }, 5000)\n            })\n    }\n\n    //function to delete a person\n    const deletePerson = (id) => {\n        const deletePersonName = persons\n            .filter((person) => person.id === id)\n            .map((person) => person.name)\n        // confirm with window.confirm\n        const confirm = window.confirm(\n            `Do you want to delete ${deletePersonName}`\n        )\n\n        // delete the item in database with id\n        if (confirm) {\n            const updatedList = { ...persons }\n            personService\n                .deleteOne(id, updatedList)\n                .then(setPersons(persons.filter((p) => p.id !== id)))\n            setNotificationType('warning')\n            setNotification(`${deletePersonName} was deleted`)\n            setTimeout(() => {\n                setNotification(null)\n                setNotificationType('')\n            }, 5000)\n        }\n    }\n\n    // function which occur when form input changes\n    // set new name(eventhandler function)\n    const handlePersonAdd = (event) => {\n        setNewName(event.target.value)\n    }\n    // set new name(eventhandler function)\n    const handleNumberAdd = (event) => {\n        setNewNumber(event.target.value)\n    }\n    // set filterednames(eventhandler function)\n    const handleFilteredName = (event) => {\n        setFilteredNames(event.target.value)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification className={notificationType} message={notification} />\n            <Filter inputName={filteredName} onChange={handleFilteredName} />\n\n            <h3>add a new</h3>\n            <PersonForm\n                onSubmit={addPerson}\n                newName={newName}\n                handleNewPerson={handlePersonAdd}\n                newNumber={newNumber}\n                handleNewNumber={handleNumberAdd}\n            />\n\n            <h3>Numbers</h3>\n            <Persons\n                persons={persons}\n                filteredName={filteredName}\n                deletePerson={deletePerson}\n            />\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}