{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","inputName","onChange","value","console","log","PersonForm","onSubmit","newName","handleNewPerson","newNumber","handleNewNumber","type","Persons","persons","filteredName","deletePerson","filter","person","name","toLowerCase","includes","map","filteredPerson","number","onClick","id","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","deleteOne","delete","update","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilteredNames","notification","setNotification","notificationType","setNotificationType","useEffect","initialList","event","target","preventDefault","length","window","confirm","toBeEditedPerson","find","editedPerson","returnedObject","setTimeout","catch","error","personObject","concat","deletePersonName","updatedList","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42a4e74c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ inputName, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={inputName} onChange={onChange} />\n      {console.log(inputName)}\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  newName,\n  handleNewPerson,\n  newNumber,\n  handleNewNumber,\n}) => {\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <div>\n          name: <input value={newName} onChange={handleNewPerson} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, filteredName, deletePerson }) => {\n  return persons\n    .filter((person) =>\n      person.name.toLowerCase().includes(filteredName.toLowerCase())\n    )\n    .map((filteredPerson) => (\n      <p key={filteredPerson.name}>\n        {filteredPerson.name} {filteredPerson.number}{\" \"}\n        {\n          <button onClick={() => deletePerson(filteredPerson.id)}>\n            {\" \"}\n            Delete{\" \"}\n          </button>\n        }\n      </p>\n    ));\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteOne = (id, newObject) => {\n  const request = axios.delete(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst personService = { getAll, create, deleteOne, update };\nexport default personService;\n","const Notification = ({ message, className }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className={className}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  // variables with initial states\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filteredName, setFilteredNames] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setNotificationType] = useState(\"\");\n\n  //fetching persons from a json server(db.json)\n  useEffect(() => {\n    personService.getAll().then((initialList) => {\n      setPersons(initialList);\n    });\n  }, []);\n\n  // function to add a person to the persons\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (persons.filter((person) => person.name === newName).length > 0) {\n      const confirmUpdate = window.confirm(\n        `${newName} is already added to phonebook ,replace the old number with a new one?`\n      );\n      if (confirmUpdate) {\n        const toBeEditedPerson = persons.find(\n          (person) => person.name === newName\n        );\n        const editedPerson = { ...toBeEditedPerson, number: newNumber };\n\n        personService\n          .update(toBeEditedPerson.id, editedPerson)\n          .then((returnedObject) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== toBeEditedPerson.id ? person : returnedObject\n              )\n            );\n\n            setNotification(`${newName} has been edited`);\n            setNotificationType(\"notify\");\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          })\n          .catch((error) => {\n            setNotificationType(\"warning\");\n            setNotification(`${newName} already removed from server`);\n            setTimeout(() => {\n              setNotification(null);\n              setNotificationType(\"\");\n            }, 5000);\n          });\n      }\n\n      return;\n    }\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    personService.create(personObject).then((returnedObject) => {\n      setPersons(persons.concat(returnedObject));\n      setNotificationType(\"notify\");\n      setNotification(`${newName} was added`);\n      setTimeout(() => {\n        setNotification(null);\n        setNotificationType(\"\");\n      }, 5000);\n      setNewName(\"\");\n      setNewNumber(\"\");\n    });\n  };\n\n  //function to delete a person\n  const deletePerson = (id) => {\n    const deletePersonName = persons\n      .filter((person) => person.id === id)\n      .map((person) => person.name);\n    // confirm with window.confirm\n    const confirm = window.confirm(`Do you want to delete ${deletePersonName}`);\n\n    // delete the item in database with id\n    if (confirm) {\n      const updatedList = { ...persons };\n      personService\n        .deleteOne(id, updatedList)\n        .then(setPersons(persons.filter((p) => p.id !== id)));\n      setNotificationType(\"warning\");\n      setNotification(`${deletePersonName} was deleted`);\n      setTimeout(() => {\n        setNotification(null);\n        setNotificationType(\"\");\n      }, 5000);\n    }\n  };\n\n  // function which occur when form input changes\n  // set new name(eventhandler function)\n  const handlePersonAdd = (event) => {\n    setNewName(event.target.value);\n  };\n  // set new name(eventhandler function)\n  const handleNumberAdd = (event) => {\n    setNewNumber(event.target.value);\n  };\n  // set filterednames(eventhandler function)\n  const handleFilteredName = (event) => {\n    setFilteredNames(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification className={notificationType} message={notification} />\n      <Filter inputName={filteredName} onChange={handleFilteredName} />\n\n      <h3>add a new</h3>\n      <PersonForm\n        onSubmit={addPerson}\n        newName={newName}\n        handleNewPerson={handlePersonAdd}\n        newNumber={newNumber}\n        handleNewNumber={handleNumberAdd}\n      />\n\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        filteredName={filteredName}\n        deletePerson={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}